--- wanpipe-3.5.20/patches/kdrivers/src/wanrouter/af_wanpipe_datascope.c.orig	2011-06-30 18:24:41.115938712 +0200
+++ wanpipe-3.5.20/patches/kdrivers/src/wanrouter/af_wanpipe_datascope.c	2011-06-30 18:26:28.426083687 +0200
@@ -71,7 +71,7 @@ HLIST_HEAD(wanpipe_parent_sklist);
 #else
 struct sock * wanpipe_parent_sklist = NULL;
 #endif
-static rwlock_t wanpipe_parent_sklist_lock = RW_LOCK_UNLOCKED;
+static DEFINE_RWLOCK(wanpipe_parent_sklist_lock);
 
 static int wanpipe_check_prot_options(struct sock *sk);
 void wanpipe_unbind_sk_from_parent(struct sock *sk);
@@ -212,7 +212,7 @@ int wanpipe_bind_sk_to_parent(struct soc
 		PPRIV_INIT(parent_sk,buf);
 		memset(PPRIV(parent_sk),0,sizeof(wanpipe_parent_t));
 
-		PPRIV(parent_sk)->lock = RW_LOCK_UNLOCKED; 
+		rwlock_init(&(PPRIV(parent_sk)->lock));
 
 		SK_PRIV(parent_sk)->dev=dev;
 
--- wanpipe-3.5.20/patches/kdrivers/src/wanrouter/af_wanpipe_src.c.orig	2011-06-30 18:28:54.086569874 +0200
+++ wanpipe-3.5.20/patches/kdrivers/src/wanrouter/af_wanpipe_src.c	2011-06-30 18:29:25.701024888 +0200
@@ -133,7 +133,7 @@ static struct proto packet_proto = {
 static struct sock * wanpipe_sklist = NULL;
 #endif
 
-static rwlock_t wanpipe_sklist_lock = RW_LOCK_UNLOCKED;
+static DEFINE_RWLOCK(wanpipe_sklist_lock);
 
 static atomic_t af_mem_alloc;
 static atomic_t af_skb_alloc;
