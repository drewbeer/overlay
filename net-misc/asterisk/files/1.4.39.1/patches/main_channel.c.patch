--- asterisk-1.4.39.1/main/channel.c	2010-12-07 14:57:48.000000000 -0800
+++ asterisk-1.4.39.1-vici/main/channel.c	2011-02-08 18:16:22.000000000 -0800
@@ -1571,6 +1571,31 @@ struct ast_datastore *ast_channel_datast
 	return datastore;
 }
 
+void ast_channel_clear_softhangup(struct ast_channel *chan, int flag)
+{
+	ast_channel_lock(chan);
+
+	chan->_softhangup &= ~flag;
+
+	if (!chan->_softhangup) {
+		struct ast_frame *fr;
+
+		/* If we have completely cleared the softhangup flag,
+		 * then we need to fully abort the hangup process.  This requires
+		 * pulling the END_OF_Q frame out of the channel frame queue if it
+		 * still happens to be there. */
+
+		fr = AST_LIST_LAST(&chan->readq);
+		if (fr && fr->frametype == AST_FRAME_CONTROL &&
+				fr->subclass == AST_CONTROL_END_OF_Q) {
+			AST_LIST_REMOVE(&chan->readq, fr, frame_list);
+			ast_frfree(fr);
+		}
+	}
+
+	ast_channel_unlock(chan);
+}
+
 /*! \brief Softly hangup a channel, don't lock */
 int ast_softhangup_nolock(struct ast_channel *chan, int cause)
 {
@@ -4598,10 +4623,10 @@ static enum ast_bridge_result ast_generi
 				ast_jb_get_and_deliver(c0, c1);
 			if ((c0->_softhangup | c1->_softhangup) & AST_SOFTHANGUP_UNBRIDGE) {/* Bit operators are intentional. */
 				if (c0->_softhangup & AST_SOFTHANGUP_UNBRIDGE) {
-					c0->_softhangup &= ~AST_SOFTHANGUP_UNBRIDGE;
+					ast_channel_clear_softhangup(c0, AST_SOFTHANGUP_UNBRIDGE);
 				}
 				if (c1->_softhangup & AST_SOFTHANGUP_UNBRIDGE) {
-					c1->_softhangup &= ~AST_SOFTHANGUP_UNBRIDGE;
+					ast_channel_clear_softhangup(c1, AST_SOFTHANGUP_UNBRIDGE);
 				}
 				c0->_bridge = c1;
 				c1->_bridge = c0;
@@ -4844,10 +4869,10 @@ enum ast_bridge_result ast_channel_bridg
 
 		if ((c0->_softhangup | c1->_softhangup) & AST_SOFTHANGUP_UNBRIDGE) {/* Bit operators are intentional. */
 			if (c0->_softhangup & AST_SOFTHANGUP_UNBRIDGE) {
-				c0->_softhangup &= ~AST_SOFTHANGUP_UNBRIDGE;
+				ast_channel_clear_softhangup(c0, AST_SOFTHANGUP_UNBRIDGE);
 			}
 			if (c1->_softhangup & AST_SOFTHANGUP_UNBRIDGE) {
-				c1->_softhangup &= ~AST_SOFTHANGUP_UNBRIDGE;
+				ast_channel_clear_softhangup(c1, AST_SOFTHANGUP_UNBRIDGE);
 			}
 			c0->_bridge = c1;
 			c1->_bridge = c0;
