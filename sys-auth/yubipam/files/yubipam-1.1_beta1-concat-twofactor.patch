Add concatenated two-factor authentication to YubiPAM.  This allows a
work-around for arguably broken PAM clients that only look for one password
field.

Regular two-factor authentication is achieved by adding the 'two_factor'
parameter to the PAM module in the appropriate /etc/pam.d file.  The "passcode"
is then set for each user when enrolling by specifying -c to ykpasswd.

i.e.
	somewhere in pam.d:

	auth sufficient pam_yubikey.so two_factor

	then:
	# ykpasswd -a -c -f ffeeddccbbaa -k afaa...

	The -c tells ykpasswd to ask for a passcode.

When logging in, the system will now ask for the OTP, followed by the
"passcode".

This patch extends the two-factor authentication to provide the concatenated
two-factor feature.  Where your PAM configuration specifies 'two_factor', change
this to 'concat_two_factor'.  Now, YubiPAM instead now asks for
'Password+YubiKey OTP'.  You enter them in this order separated by a single
space.  This method is compatible with single-password PAM clients such as KDM.

--- YubiPAM-1.1-beta1/src/pam_yubikey.c.orig	2011-02-17 06:29:36.463262097 +1000
+++ YubiPAM-1.1-beta1/src/pam_yubikey.c	2011-02-17 07:29:55.017380877 +1000
@@ -26,6 +26,7 @@
 *      the Linux-PAM project, specfically unik_chkpwd.c
 *   2. This addition was intiated by Geoff Hoff
 *
+* vim: set ts=4 sts=4
 */
 
 #ifdef HAVE_CONFIG_H
@@ -100,6 +101,8 @@
 			verbose_otp = 1;
 		else if (strncmp(argv[i], "two_factor", 10) == 0)
 			two_factor = 1;
+		else if (strncmp(argv[i], "concat_two_factor", 17) == 0)
+			two_factor = 2;
 	}
 	D (("verbose=%d", verbose_otp));
 
@@ -113,18 +116,40 @@
 	
 	D (("get user returned: %s", user));
 
-	/* prompt for the Yubikey OTP (always) */
-	{
+	if (two_factor == 2) {
+		/* Prompt for the user's password and OTP together */
+		passcode = get_response(pamh, "Passcode+Yubikey OTP", user, 0);
+		/* Find last space, beyond is our OTP */
+		otp = rindex(passcode, ' ');
+		if (otp)
+			/* otp is one character before OTP */
+			strncpy(otp_passcode, &otp[1], 128);
+		else
+			/* Fail right here */
+			return PAM_AUTH_ERR;
+		
+		/* Append the | character and passcode+OTP */
+		strncat(otp_passcode,"|",128);
+		strncat(otp_passcode,passcode,128);
+
+		/* Find the last space again and make it a null */
+		passcode = rindex(otp_passcode,' ');
+		if (passcode)
+			*passcode = 0;
+		else
+			return PAM_AUTH_ERR;
+	} else {
+		/* prompt for the Yubikey OTP (always) */
 		otp = get_response(pamh, "Yubikey OTP", user, verbose_otp);
-	}
 
-	/* prompt for the second factor passcode as required */
-	if ( two_factor)
-    {
-    	passcode = get_response(pamh, "Yubikey Passcode", user, 0);
-	}
+		/* prompt for the second factor passcode as required */
+		if (two_factor)
+    	{
+    		passcode = get_response(pamh, "Yubikey Passcode", user, 0);
+		}
 
-    snprintf(otp_passcode, 128, "%s|%s", otp ? otp:"", passcode ? passcode:"");
+    	snprintf(otp_passcode, 128, "%s|%s", otp ? otp:"", passcode ? passcode:"");
+	}
 
     D (("pass: %s (%d)", otp_passcode, strlen(otp_passcode)));
 
